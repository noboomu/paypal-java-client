/*
 * Invoices
 * Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sinistral.s1.payments.paypal.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;


/**
 * The invoice search parameters.
 */
@JsonPropertyOrder({
  SearchData.JSON_PROPERTY_RECIPIENT_EMAIL,
  SearchData.JSON_PROPERTY_RECIPIENT_FIRST_NAME,
  SearchData.JSON_PROPERTY_RECIPIENT_LAST_NAME,
  SearchData.JSON_PROPERTY_RECIPIENT_BUSINESS_NAME,
  SearchData.JSON_PROPERTY_INVOICE_NUMBER,
  SearchData.JSON_PROPERTY_STATUS,
  SearchData.JSON_PROPERTY_REFERENCE,
  SearchData.JSON_PROPERTY_CURRENCY_CODE,
  SearchData.JSON_PROPERTY_MEMO,
  SearchData.JSON_PROPERTY_TOTAL_AMOUNT_RANGE,
  SearchData.JSON_PROPERTY_INVOICE_DATE_RANGE,
  SearchData.JSON_PROPERTY_DUE_DATE_RANGE,
  SearchData.JSON_PROPERTY_PAYMENT_DATE_RANGE,
  SearchData.JSON_PROPERTY_CREATION_DATE_RANGE,
  SearchData.JSON_PROPERTY_ARCHIVED,
  SearchData.JSON_PROPERTY_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-21T16:02:23.639524-07:00[America/Los_Angeles]")
public class SearchData {
  public static final String JSON_PROPERTY_RECIPIENT_EMAIL = "recipient_email";
  private String recipientEmail;

  public static final String JSON_PROPERTY_RECIPIENT_FIRST_NAME = "recipient_first_name";
  private String recipientFirstName;

  public static final String JSON_PROPERTY_RECIPIENT_LAST_NAME = "recipient_last_name";
  private String recipientLastName;

  public static final String JSON_PROPERTY_RECIPIENT_BUSINESS_NAME = "recipient_business_name";
  private String recipientBusinessName;

  public static final String JSON_PROPERTY_INVOICE_NUMBER = "invoice_number";
  private String invoiceNumber;

  public static final String JSON_PROPERTY_STATUS = "status";
  private List<InvoiceStatus> status;

  public static final String JSON_PROPERTY_REFERENCE = "reference";
  private String reference;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currency_code";
  private String currencyCode;

  public static final String JSON_PROPERTY_MEMO = "memo";
  private String memo;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT_RANGE = "total_amount_range";
  private AmountRange totalAmountRange;

  public static final String JSON_PROPERTY_INVOICE_DATE_RANGE = "invoice_date_range";
  private DateRange invoiceDateRange;

  public static final String JSON_PROPERTY_DUE_DATE_RANGE = "due_date_range";
  private DateRange dueDateRange;

  public static final String JSON_PROPERTY_PAYMENT_DATE_RANGE = "payment_date_range";
  private DateTimeRange paymentDateRange;

  public static final String JSON_PROPERTY_CREATION_DATE_RANGE = "creation_date_range";
  private DateTimeRange creationDateRange;

  public static final String JSON_PROPERTY_ARCHIVED = "archived";
  private Boolean archived;

  public static final String JSON_PROPERTY_FIELDS = "fields";
  private List<String> fields;

  public SearchData() { 
  }

  public SearchData recipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
    return this;
  }

   /**
   * Filters the search by the email address.
   * @return recipientEmail
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecipientEmail() {
    return recipientEmail;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipientEmail(String recipientEmail) {
    this.recipientEmail = recipientEmail;
  }


  public SearchData recipientFirstName(String recipientFirstName) {
    this.recipientFirstName = recipientFirstName;
    return this;
  }

   /**
   * Filters the search by the recipient first name.
   * @return recipientFirstName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecipientFirstName() {
    return recipientFirstName;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipientFirstName(String recipientFirstName) {
    this.recipientFirstName = recipientFirstName;
  }


  public SearchData recipientLastName(String recipientLastName) {
    this.recipientLastName = recipientLastName;
    return this;
  }

   /**
   * Filters the search by the recipient last name.
   * @return recipientLastName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecipientLastName() {
    return recipientLastName;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipientLastName(String recipientLastName) {
    this.recipientLastName = recipientLastName;
  }


  public SearchData recipientBusinessName(String recipientBusinessName) {
    this.recipientBusinessName = recipientBusinessName;
    return this;
  }

   /**
   * Filters the search by the recipient business name.
   * @return recipientBusinessName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT_BUSINESS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecipientBusinessName() {
    return recipientBusinessName;
  }


  @JsonProperty(JSON_PROPERTY_RECIPIENT_BUSINESS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecipientBusinessName(String recipientBusinessName) {
    this.recipientBusinessName = recipientBusinessName;
  }


  public SearchData invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Filters the search by the invoice number.
   * @return invoiceNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInvoiceNumber() {
    return invoiceNumber;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public SearchData status(List<InvoiceStatus> status) {
    this.status = status;
    return this;
  }

  public SearchData addStatusItem(InvoiceStatus statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * An array of status values.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InvoiceStatus> getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(List<InvoiceStatus> status) {
    this.status = status;
  }


  public SearchData reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * The reference data, such as a PO number.
   * @return reference
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReference() {
    return reference;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReference(String reference) {
    this.reference = reference;
  }


  public SearchData currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency.
   * @return currencyCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyCode() {
    return currencyCode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public SearchData memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * A private bookkeeping memo for the user.
   * @return memo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMemo() {
    return memo;
  }


  @JsonProperty(JSON_PROPERTY_MEMO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemo(String memo) {
    this.memo = memo;
  }


  public SearchData totalAmountRange(AmountRange totalAmountRange) {
    this.totalAmountRange = totalAmountRange;
    return this;
  }

   /**
   * Get totalAmountRange
   * @return totalAmountRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmountRange getTotalAmountRange() {
    return totalAmountRange;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalAmountRange(AmountRange totalAmountRange) {
    this.totalAmountRange = totalAmountRange;
  }


  public SearchData invoiceDateRange(DateRange invoiceDateRange) {
    this.invoiceDateRange = invoiceDateRange;
    return this;
  }

   /**
   * Get invoiceDateRange
   * @return invoiceDateRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateRange getInvoiceDateRange() {
    return invoiceDateRange;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceDateRange(DateRange invoiceDateRange) {
    this.invoiceDateRange = invoiceDateRange;
  }


  public SearchData dueDateRange(DateRange dueDateRange) {
    this.dueDateRange = dueDateRange;
    return this;
  }

   /**
   * Get dueDateRange
   * @return dueDateRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DUE_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateRange getDueDateRange() {
    return dueDateRange;
  }


  @JsonProperty(JSON_PROPERTY_DUE_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDueDateRange(DateRange dueDateRange) {
    this.dueDateRange = dueDateRange;
  }


  public SearchData paymentDateRange(DateTimeRange paymentDateRange) {
    this.paymentDateRange = paymentDateRange;
    return this;
  }

   /**
   * Get paymentDateRange
   * @return paymentDateRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTimeRange getPaymentDateRange() {
    return paymentDateRange;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentDateRange(DateTimeRange paymentDateRange) {
    this.paymentDateRange = paymentDateRange;
  }


  public SearchData creationDateRange(DateTimeRange creationDateRange) {
    this.creationDateRange = creationDateRange;
    return this;
  }

   /**
   * Get creationDateRange
   * @return creationDateRange
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATION_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTimeRange getCreationDateRange() {
    return creationDateRange;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDateRange(DateTimeRange creationDateRange) {
    this.creationDateRange = creationDateRange;
  }


  public SearchData archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Indicates whether to list merchant-archived invoices in the response. Value is:&lt;ul&gt;&lt;li&gt;&lt;code&gt;true&lt;/code&gt;. Response lists only merchant-archived invoices.&lt;/li&gt;&lt;li&gt;&lt;code&gt;false&lt;/code&gt;. Response lists only unarchived invoices.&lt;/li&gt;&lt;li&gt;&lt;code&gt;null&lt;/code&gt;. Response lists all invoices.&lt;/li&gt;&lt;/ul&gt;
   * @return archived
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getArchived() {
    return archived;
  }


  @JsonProperty(JSON_PROPERTY_ARCHIVED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public SearchData fields(List<String> fields) {
    this.fields = fields;
    return this;
  }

  public SearchData addFieldsItem(String fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A CSV file of fields to return for the user, if available. Because the invoice object can be very large, field filtering is required. Valid collection fields are &lt;code&gt;items&lt;/code&gt;, &lt;code&gt;payments&lt;/code&gt;, &lt;code&gt;refunds&lt;/code&gt;, &lt;code&gt;additional_recipients_info&lt;/code&gt;, and &lt;code&gt;attachments&lt;/code&gt;.
   * @return fields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(List<String> fields) {
    this.fields = fields;
  }


  /**
   * Return true if this search_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchData searchData = (SearchData) o;
    return Objects.equals(this.recipientEmail, searchData.recipientEmail) &&
        Objects.equals(this.recipientFirstName, searchData.recipientFirstName) &&
        Objects.equals(this.recipientLastName, searchData.recipientLastName) &&
        Objects.equals(this.recipientBusinessName, searchData.recipientBusinessName) &&
        Objects.equals(this.invoiceNumber, searchData.invoiceNumber) &&
        Objects.equals(this.status, searchData.status) &&
        Objects.equals(this.reference, searchData.reference) &&
        Objects.equals(this.currencyCode, searchData.currencyCode) &&
        Objects.equals(this.memo, searchData.memo) &&
        Objects.equals(this.totalAmountRange, searchData.totalAmountRange) &&
        Objects.equals(this.invoiceDateRange, searchData.invoiceDateRange) &&
        Objects.equals(this.dueDateRange, searchData.dueDateRange) &&
        Objects.equals(this.paymentDateRange, searchData.paymentDateRange) &&
        Objects.equals(this.creationDateRange, searchData.creationDateRange) &&
        Objects.equals(this.archived, searchData.archived) &&
        Objects.equals(this.fields, searchData.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipientEmail, recipientFirstName, recipientLastName, recipientBusinessName, invoiceNumber, status, reference, currencyCode, memo, totalAmountRange, invoiceDateRange, dueDateRange, paymentDateRange, creationDateRange, archived, fields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchData {\n");
    sb.append("    recipientEmail: ").append(toIndentedString(recipientEmail)).append("\n");
    sb.append("    recipientFirstName: ").append(toIndentedString(recipientFirstName)).append("\n");
    sb.append("    recipientLastName: ").append(toIndentedString(recipientLastName)).append("\n");
    sb.append("    recipientBusinessName: ").append(toIndentedString(recipientBusinessName)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    totalAmountRange: ").append(toIndentedString(totalAmountRange)).append("\n");
    sb.append("    invoiceDateRange: ").append(toIndentedString(invoiceDateRange)).append("\n");
    sb.append("    dueDateRange: ").append(toIndentedString(dueDateRange)).append("\n");
    sb.append("    paymentDateRange: ").append(toIndentedString(paymentDateRange)).append("\n");
    sb.append("    creationDateRange: ").append(toIndentedString(creationDateRange)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `recipient_email` to the URL query string
    if (getRecipientEmail() != null) {
      joiner.add(String.format("%srecipient_email%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRecipientEmail()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `recipient_first_name` to the URL query string
    if (getRecipientFirstName() != null) {
      joiner.add(String.format("%srecipient_first_name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRecipientFirstName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `recipient_last_name` to the URL query string
    if (getRecipientLastName() != null) {
      joiner.add(String.format("%srecipient_last_name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRecipientLastName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `recipient_business_name` to the URL query string
    if (getRecipientBusinessName() != null) {
      joiner.add(String.format("%srecipient_business_name%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRecipientBusinessName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `invoice_number` to the URL query string
    if (getInvoiceNumber() != null) {
      joiner.add(String.format("%sinvoice_number%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInvoiceNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      for (int i = 0; i < getStatus().size(); i++) {
        if (getStatus().get(i) != null) {
          joiner.add(String.format("%sstatus%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getStatus().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }
      }
    }

    // add `reference` to the URL query string
    if (getReference() != null) {
      joiner.add(String.format("%sreference%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getReference()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `currency_code` to the URL query string
    if (getCurrencyCode() != null) {
      joiner.add(String.format("%scurrency_code%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCurrencyCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `memo` to the URL query string
    if (getMemo() != null) {
      joiner.add(String.format("%smemo%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMemo()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `total_amount_range` to the URL query string
    if (getTotalAmountRange() != null) {
      joiner.add(getTotalAmountRange().toUrlQueryString(prefix + "total_amount_range" + suffix));
    }

    // add `invoice_date_range` to the URL query string
    if (getInvoiceDateRange() != null) {
      joiner.add(getInvoiceDateRange().toUrlQueryString(prefix + "invoice_date_range" + suffix));
    }

    // add `due_date_range` to the URL query string
    if (getDueDateRange() != null) {
      joiner.add(getDueDateRange().toUrlQueryString(prefix + "due_date_range" + suffix));
    }

    // add `payment_date_range` to the URL query string
    if (getPaymentDateRange() != null) {
      joiner.add(getPaymentDateRange().toUrlQueryString(prefix + "payment_date_range" + suffix));
    }

    // add `creation_date_range` to the URL query string
    if (getCreationDateRange() != null) {
      joiner.add(getCreationDateRange().toUrlQueryString(prefix + "creation_date_range" + suffix));
    }

    // add `archived` to the URL query string
    if (getArchived() != null) {
      joiner.add(String.format("%sarchived%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getArchived()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `fields` to the URL query string
    if (getFields() != null) {
      for (int i = 0; i < getFields().size(); i++) {
        joiner.add(String.format("%sfields%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getFields().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

