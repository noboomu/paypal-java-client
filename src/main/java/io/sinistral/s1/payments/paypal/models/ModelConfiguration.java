/*
 * Invoices
 * Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sinistral.s1.payments.paypal.models;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;


/**
 * The invoice configuration details. Includes partial payment, tip, and tax calculated after discount.
 */
@JsonPropertyOrder({
  ModelConfiguration.JSON_PROPERTY_TAX_CALCULATED_AFTER_DISCOUNT,
  ModelConfiguration.JSON_PROPERTY_TAX_INCLUSIVE,
  ModelConfiguration.JSON_PROPERTY_ALLOW_TIP,
  ModelConfiguration.JSON_PROPERTY_PARTIAL_PAYMENT,
  ModelConfiguration.JSON_PROPERTY_TEMPLATE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-21T16:02:23.639524-07:00[America/Los_Angeles]")
public class ModelConfiguration {
  public static final String JSON_PROPERTY_TAX_CALCULATED_AFTER_DISCOUNT = "tax_calculated_after_discount";
  private Boolean taxCalculatedAfterDiscount = true;

  public static final String JSON_PROPERTY_TAX_INCLUSIVE = "tax_inclusive";
  private Boolean taxInclusive = false;

  public static final String JSON_PROPERTY_ALLOW_TIP = "allow_tip";
  private Boolean allowTip = false;

  public static final String JSON_PROPERTY_PARTIAL_PAYMENT = "partial_payment";
  private PartialPayment partialPayment;

  public static final String JSON_PROPERTY_TEMPLATE_ID = "template_id";
  private String templateId = "PayPal system template";

  public ModelConfiguration() { 
  }

  public ModelConfiguration taxCalculatedAfterDiscount(Boolean taxCalculatedAfterDiscount) {
    this.taxCalculatedAfterDiscount = taxCalculatedAfterDiscount;
    return this;
  }

   /**
   * Indicates whether the tax is calculated before or after a discount. If &#x60;false&#x60;, the tax is calculated before a discount. If &#x60;true&#x60;, the tax is calculated after a discount.
   * @return taxCalculatedAfterDiscount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_CALCULATED_AFTER_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxCalculatedAfterDiscount() {
    return taxCalculatedAfterDiscount;
  }


  @JsonProperty(JSON_PROPERTY_TAX_CALCULATED_AFTER_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxCalculatedAfterDiscount(Boolean taxCalculatedAfterDiscount) {
    this.taxCalculatedAfterDiscount = taxCalculatedAfterDiscount;
  }


  public ModelConfiguration taxInclusive(Boolean taxInclusive) {
    this.taxInclusive = taxInclusive;
    return this;
  }

   /**
   * Indicates whether the unit price includes tax.
   * @return taxInclusive
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_INCLUSIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTaxInclusive() {
    return taxInclusive;
  }


  @JsonProperty(JSON_PROPERTY_TAX_INCLUSIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxInclusive(Boolean taxInclusive) {
    this.taxInclusive = taxInclusive;
  }


  public ModelConfiguration allowTip(Boolean allowTip) {
    this.allowTip = allowTip;
    return this;
  }

   /**
   * Indicates whether the invoice enables the customer to enter a tip amount during payment. If &#x60;true&#x60;, the invoice shows a tip amount field so that the customer can enter a tip amount. If &#x60;false&#x60;, the invoice does not show a tip amount field.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; This feature is not available for users in &#x60;Hong Kong&#x60;, &#x60;Taiwan&#x60;, &#x60;India&#x60;, or &#x60;Japan&#x60;.&lt;/blockquote&gt;
   * @return allowTip
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_TIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAllowTip() {
    return allowTip;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_TIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowTip(Boolean allowTip) {
    this.allowTip = allowTip;
  }


  public ModelConfiguration partialPayment(PartialPayment partialPayment) {
    this.partialPayment = partialPayment;
    return this;
  }

   /**
   * Get partialPayment
   * @return partialPayment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARTIAL_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PartialPayment getPartialPayment() {
    return partialPayment;
  }


  @JsonProperty(JSON_PROPERTY_PARTIAL_PAYMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPartialPayment(PartialPayment partialPayment) {
    this.partialPayment = partialPayment;
  }


  public ModelConfiguration templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * The template ID. The template determines the layout of the invoice. Includes which fields to show and hide.
   * @return templateId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplateId() {
    return templateId;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  /**
   * Return true if this _configuration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelConfiguration _configuration = (ModelConfiguration) o;
    return Objects.equals(this.taxCalculatedAfterDiscount, _configuration.taxCalculatedAfterDiscount) &&
        Objects.equals(this.taxInclusive, _configuration.taxInclusive) &&
        Objects.equals(this.allowTip, _configuration.allowTip) &&
        Objects.equals(this.partialPayment, _configuration.partialPayment) &&
        Objects.equals(this.templateId, _configuration.templateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxCalculatedAfterDiscount, taxInclusive, allowTip, partialPayment, templateId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelConfiguration {\n");
    sb.append("    taxCalculatedAfterDiscount: ").append(toIndentedString(taxCalculatedAfterDiscount)).append("\n");
    sb.append("    taxInclusive: ").append(toIndentedString(taxInclusive)).append("\n");
    sb.append("    allowTip: ").append(toIndentedString(allowTip)).append("\n");
    sb.append("    partialPayment: ").append(toIndentedString(partialPayment)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `tax_calculated_after_discount` to the URL query string
    if (getTaxCalculatedAfterDiscount() != null) {
      joiner.add(String.format("%stax_calculated_after_discount%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTaxCalculatedAfterDiscount()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tax_inclusive` to the URL query string
    if (getTaxInclusive() != null) {
      joiner.add(String.format("%stax_inclusive%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTaxInclusive()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `allow_tip` to the URL query string
    if (getAllowTip() != null) {
      joiner.add(String.format("%sallow_tip%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAllowTip()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `partial_payment` to the URL query string
    if (getPartialPayment() != null) {
      joiner.add(getPartialPayment().toUrlQueryString(prefix + "partial_payment" + suffix));
    }

    // add `template_id` to the URL query string
    if (getTemplateId() != null) {
      joiner.add(String.format("%stemplate_id%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTemplateId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

