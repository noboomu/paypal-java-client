/*
 * Invoices
 * Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sinistral.s1.payments.paypal.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.net.URI;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;


/**
 * The audit metadata. Captures all invoicing actions on create, send, update, and cancel.
 */
@JsonPropertyOrder({
  Metadata.JSON_PROPERTY_CREATE_TIME,
  Metadata.JSON_PROPERTY_CREATED_BY,
  Metadata.JSON_PROPERTY_LAST_UPDATE_TIME,
  Metadata.JSON_PROPERTY_LAST_UPDATED_BY,
  Metadata.JSON_PROPERTY_CANCEL_TIME,
  Metadata.JSON_PROPERTY_CANCELLED_BY,
  Metadata.JSON_PROPERTY_FIRST_SENT_TIME,
  Metadata.JSON_PROPERTY_LAST_SENT_TIME,
  Metadata.JSON_PROPERTY_LAST_SENT_BY,
  Metadata.JSON_PROPERTY_CREATED_BY_FLOW,
  Metadata.JSON_PROPERTY_RECIPIENT_VIEW_URL,
  Metadata.JSON_PROPERTY_INVOICER_VIEW_URL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-21T16:02:23.639524-07:00[America/Los_Angeles]")
public class Metadata {
  public static final String JSON_PROPERTY_CREATE_TIME = "create_time";
  private String createTime;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  private String createdBy;

  public static final String JSON_PROPERTY_LAST_UPDATE_TIME = "last_update_time";
  private String lastUpdateTime;

  public static final String JSON_PROPERTY_LAST_UPDATED_BY = "last_updated_by";
  private String lastUpdatedBy;

  public static final String JSON_PROPERTY_CANCEL_TIME = "cancel_time";
  private String cancelTime;

  public static final String JSON_PROPERTY_CANCELLED_BY = "cancelled_by";
  private String cancelledBy;

  public static final String JSON_PROPERTY_FIRST_SENT_TIME = "first_sent_time";
  private String firstSentTime;

  public static final String JSON_PROPERTY_LAST_SENT_TIME = "last_sent_time";
  private String lastSentTime;

  public static final String JSON_PROPERTY_LAST_SENT_BY = "last_sent_by";
  private String lastSentBy;

  public static final String JSON_PROPERTY_CREATED_BY_FLOW = "created_by_flow";
  private InvoiceCreationFlow createdByFlow;

  public static final String JSON_PROPERTY_RECIPIENT_VIEW_URL = "recipient_view_url";
  private URI recipientViewUrl;

  public static final String JSON_PROPERTY_INVOICER_VIEW_URL = "invoicer_view_url";
  private URI invoicerViewUrl;

  public Metadata() { 
  }

  @JsonCreator
  public Metadata(
    @JsonProperty(JSON_PROPERTY_CREATED_BY) String createdBy, 
    @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY) String lastUpdatedBy, 
    @JsonProperty(JSON_PROPERTY_CANCELLED_BY) String cancelledBy, 
    @JsonProperty(JSON_PROPERTY_LAST_SENT_BY) String lastSentBy, 
    @JsonProperty(JSON_PROPERTY_RECIPIENT_VIEW_URL) URI recipientViewUrl, 
    @JsonProperty(JSON_PROPERTY_INVOICER_VIEW_URL) URI invoicerViewUrl
  ) {
  this();
    this.createdBy = createdBy;
    this.lastUpdatedBy = lastUpdatedBy;
    this.cancelledBy = cancelledBy;
    this.lastSentBy = lastSentBy;
    this.recipientViewUrl = recipientViewUrl;
    this.invoicerViewUrl = invoicerViewUrl;
  }

  public Metadata createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The regular expression provides guidance but does not reject all invalid dates.&lt;/blockquote&gt;
   * @return createTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


   /**
   * The email address of the account that created the resource.
   * @return createdBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedBy() {
    return createdBy;
  }




  public Metadata lastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

   /**
   * The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The regular expression provides guidance but does not reject all invalid dates.&lt;/blockquote&gt;
   * @return lastUpdateTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUpdateTime() {
    return lastUpdateTime;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }


   /**
   * The email address of the account that last edited the resource.
   * @return lastUpdatedBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastUpdatedBy() {
    return lastUpdatedBy;
  }




  public Metadata cancelTime(String cancelTime) {
    this.cancelTime = cancelTime;
    return this;
  }

   /**
   * The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The regular expression provides guidance but does not reject all invalid dates.&lt;/blockquote&gt;
   * @return cancelTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCEL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancelTime() {
    return cancelTime;
  }


  @JsonProperty(JSON_PROPERTY_CANCEL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCancelTime(String cancelTime) {
    this.cancelTime = cancelTime;
  }


   /**
   * The actor who canceled the resource.
   * @return cancelledBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CANCELLED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCancelledBy() {
    return cancelledBy;
  }




  public Metadata firstSentTime(String firstSentTime) {
    this.firstSentTime = firstSentTime;
    return this;
  }

   /**
   * The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The regular expression provides guidance but does not reject all invalid dates.&lt;/blockquote&gt;
   * @return firstSentTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_SENT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstSentTime() {
    return firstSentTime;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SENT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSentTime(String firstSentTime) {
    this.firstSentTime = firstSentTime;
  }


  public Metadata lastSentTime(String lastSentTime) {
    this.lastSentTime = lastSentTime;
    return this;
  }

   /**
   * The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.&lt;blockquote&gt;&lt;strong&gt;Note:&lt;/strong&gt; The regular expression provides guidance but does not reject all invalid dates.&lt;/blockquote&gt;
   * @return lastSentTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_SENT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastSentTime() {
    return lastSentTime;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SENT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastSentTime(String lastSentTime) {
    this.lastSentTime = lastSentTime;
  }


   /**
   * The email address of the account that last sent the resource.
   * @return lastSentBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_SENT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastSentBy() {
    return lastSentBy;
  }




  public Metadata createdByFlow(InvoiceCreationFlow createdByFlow) {
    this.createdByFlow = createdByFlow;
    return this;
  }

   /**
   * Get createdByFlow
   * @return createdByFlow
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvoiceCreationFlow getCreatedByFlow() {
    return createdByFlow;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedByFlow(InvoiceCreationFlow createdByFlow) {
    this.createdByFlow = createdByFlow;
  }


   /**
   * The URL for the invoice payer view hosted on paypal.com.
   * @return recipientViewUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECIPIENT_VIEW_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getRecipientViewUrl() {
    return recipientViewUrl;
  }




   /**
   * The URL for the invoice merchant view hosted on paypal.com.
   * @return invoicerViewUrl
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICER_VIEW_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public URI getInvoicerViewUrl() {
    return invoicerViewUrl;
  }




  /**
   * Return true if this metadata object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metadata metadata = (Metadata) o;
    return Objects.equals(this.createTime, metadata.createTime) &&
        Objects.equals(this.createdBy, metadata.createdBy) &&
        Objects.equals(this.lastUpdateTime, metadata.lastUpdateTime) &&
        Objects.equals(this.lastUpdatedBy, metadata.lastUpdatedBy) &&
        Objects.equals(this.cancelTime, metadata.cancelTime) &&
        Objects.equals(this.cancelledBy, metadata.cancelledBy) &&
        Objects.equals(this.firstSentTime, metadata.firstSentTime) &&
        Objects.equals(this.lastSentTime, metadata.lastSentTime) &&
        Objects.equals(this.lastSentBy, metadata.lastSentBy) &&
        Objects.equals(this.createdByFlow, metadata.createdByFlow) &&
        Objects.equals(this.recipientViewUrl, metadata.recipientViewUrl) &&
        Objects.equals(this.invoicerViewUrl, metadata.invoicerViewUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, createdBy, lastUpdateTime, lastUpdatedBy, cancelTime, cancelledBy, firstSentTime, lastSentTime, lastSentBy, createdByFlow, recipientViewUrl, invoicerViewUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metadata {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    cancelTime: ").append(toIndentedString(cancelTime)).append("\n");
    sb.append("    cancelledBy: ").append(toIndentedString(cancelledBy)).append("\n");
    sb.append("    firstSentTime: ").append(toIndentedString(firstSentTime)).append("\n");
    sb.append("    lastSentTime: ").append(toIndentedString(lastSentTime)).append("\n");
    sb.append("    lastSentBy: ").append(toIndentedString(lastSentBy)).append("\n");
    sb.append("    createdByFlow: ").append(toIndentedString(createdByFlow)).append("\n");
    sb.append("    recipientViewUrl: ").append(toIndentedString(recipientViewUrl)).append("\n");
    sb.append("    invoicerViewUrl: ").append(toIndentedString(invoicerViewUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `create_time` to the URL query string
    if (getCreateTime() != null) {
      joiner.add(String.format("%screate_time%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreateTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `created_by` to the URL query string
    if (getCreatedBy() != null) {
      joiner.add(String.format("%screated_by%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatedBy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `last_update_time` to the URL query string
    if (getLastUpdateTime() != null) {
      joiner.add(String.format("%slast_update_time%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastUpdateTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `last_updated_by` to the URL query string
    if (getLastUpdatedBy() != null) {
      joiner.add(String.format("%slast_updated_by%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastUpdatedBy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cancel_time` to the URL query string
    if (getCancelTime() != null) {
      joiner.add(String.format("%scancel_time%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCancelTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `cancelled_by` to the URL query string
    if (getCancelledBy() != null) {
      joiner.add(String.format("%scancelled_by%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCancelledBy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `first_sent_time` to the URL query string
    if (getFirstSentTime() != null) {
      joiner.add(String.format("%sfirst_sent_time%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFirstSentTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `last_sent_time` to the URL query string
    if (getLastSentTime() != null) {
      joiner.add(String.format("%slast_sent_time%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastSentTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `last_sent_by` to the URL query string
    if (getLastSentBy() != null) {
      joiner.add(String.format("%slast_sent_by%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastSentBy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `created_by_flow` to the URL query string
    if (getCreatedByFlow() != null) {
      joiner.add(String.format("%screated_by_flow%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreatedByFlow()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `recipient_view_url` to the URL query string
    if (getRecipientViewUrl() != null) {
      joiner.add(String.format("%srecipient_view_url%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRecipientViewUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `invoicer_view_url` to the URL query string
    if (getInvoicerViewUrl() != null) {
      joiner.add(String.format("%sinvoicer_view_url%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInvoicerViewUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

