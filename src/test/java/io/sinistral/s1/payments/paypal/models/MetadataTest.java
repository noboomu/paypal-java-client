/*
 * Invoices
 * Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sinistral.s1.payments.paypal.models;

import org.junit.jupiter.api.Test;

/**
 * Model tests for Metadata
 */
public class MetadataTest {
    private final Metadata model = new Metadata();

    /**
     * Model tests for Metadata
     */
    @Test
    public void testMetadata() {
        // TODO: test Metadata
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'lastUpdateTime'
     */
    @Test
    public void lastUpdateTimeTest() {
        // TODO: test lastUpdateTime
    }

    /**
     * Test the property 'lastUpdatedBy'
     */
    @Test
    public void lastUpdatedByTest() {
        // TODO: test lastUpdatedBy
    }

    /**
     * Test the property 'cancelTime'
     */
    @Test
    public void cancelTimeTest() {
        // TODO: test cancelTime
    }

    /**
     * Test the property 'cancelledBy'
     */
    @Test
    public void cancelledByTest() {
        // TODO: test cancelledBy
    }

    /**
     * Test the property 'firstSentTime'
     */
    @Test
    public void firstSentTimeTest() {
        // TODO: test firstSentTime
    }

    /**
     * Test the property 'lastSentTime'
     */
    @Test
    public void lastSentTimeTest() {
        // TODO: test lastSentTime
    }

    /**
     * Test the property 'lastSentBy'
     */
    @Test
    public void lastSentByTest() {
        // TODO: test lastSentBy
    }

    /**
     * Test the property 'createdByFlow'
     */
    @Test
    public void createdByFlowTest() {
        // TODO: test createdByFlow
    }

    /**
     * Test the property 'recipientViewUrl'
     */
    @Test
    public void recipientViewUrlTest() {
        // TODO: test recipientViewUrl
    }

    /**
     * Test the property 'invoicerViewUrl'
     */
    @Test
    public void invoicerViewUrlTest() {
        // TODO: test invoicerViewUrl
    }

}
