/*
 * Invoices
 * Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sinistral.s1.payments.paypal.models;

import org.junit.jupiter.api.Test;

/**
 * Model tests for AddressPortable
 */
public class AddressPortableTest {
    private final AddressPortable model = new AddressPortable();

    /**
     * Model tests for AddressPortable
     */
    @Test
    public void testAddressPortable() {
        // TODO: test AddressPortable
    }

    /**
     * Test the property 'addressLine1'
     */
    @Test
    public void addressLine1Test() {
        // TODO: test addressLine1
    }

    /**
     * Test the property 'addressLine2'
     */
    @Test
    public void addressLine2Test() {
        // TODO: test addressLine2
    }

    /**
     * Test the property 'addressLine3'
     */
    @Test
    public void addressLine3Test() {
        // TODO: test addressLine3
    }

    /**
     * Test the property 'adminArea4'
     */
    @Test
    public void adminArea4Test() {
        // TODO: test adminArea4
    }

    /**
     * Test the property 'adminArea3'
     */
    @Test
    public void adminArea3Test() {
        // TODO: test adminArea3
    }

    /**
     * Test the property 'adminArea2'
     */
    @Test
    public void adminArea2Test() {
        // TODO: test adminArea2
    }

    /**
     * Test the property 'adminArea1'
     */
    @Test
    public void adminArea1Test() {
        // TODO: test adminArea1
    }

    /**
     * Test the property 'postalCode'
     */
    @Test
    public void postalCodeTest() {
        // TODO: test postalCode
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'addressDetails'
     */
    @Test
    public void addressDetailsTest() {
        // TODO: test addressDetails
    }

}
